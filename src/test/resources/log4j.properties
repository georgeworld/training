#配置根Logger：设定日志记录的最低级别，语法：log4j.rootLogger = [ level ] , appenderName, appenderName, …
log4j.rootLogger=DEBUG, stdout, logfile
log4j.category.org.springframework=ERROR
log4j.category.org.apache=INFO
log4j.logger.org.hibernate=ERROR 

#输出到控制台
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#指定日志信息的最低输出级别，默认为DEBUG。
log4j.appender.stdout.Threshold=INFO
#表示所有消息都会被立即输出，设为false则不输出，默认值是true。
log4j.appender.stdout.ImmediateFlush=true
#日志输出样式（PatternLayout为自由指定样式）
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#默认情况下是：System.out,指定输出控制台
log4j.appender.stdout.Target=System.out 
#设定以怎样的格式显示消息
log4j.appender.stdout.layout.ConversionPattern= %m %x %n


#文件大小到达指定尺寸的时候产生一个新的文件
log4j.appender.logfile=org.apache.log4j.RollingFileAppender
#指定日志信息的最低输出级别，默认为DEBUG。
log4j.appender.logfile.Threshold=INFO
#日志的输出文件所在目录
log4j.appender.logfile.File=logs/training.log 
#true表示消息增加到指定文件中，false则将消息覆盖指定的文件内容，默认值是true。
log4j.appender.logfile.Append=true
#后缀可以是KB, MB 或者GB。在日志文件到达该大小时，将会自动滚动，即将原来的内容移到logging.log4j.1文件中。
log4j.appender.logfile.MaxFileSize=100KB
#指定可以产生的滚动文件的最大数，例如，设为2则可以产生wran.log4j.1，warn.log4j.2两个滚动文件和一个warn.log4j文件。
log4j.appender.logfile.MaxBackupIndex=2
#日志输出样式（PatternLayout为自由指定样式）
log4j.appender.logfile.layout=org.apache.log4j.PatternLayout 
#设定以怎样的格式显示消息
log4j.appender.logfile.layout.ConversionPattern=[%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} --> [%t] %l: %m %x %n

#每天产生一个日志文件
log4j.appender.DAILY=org.apache.log4j.DailyRollingFileAppender
log4j.appender.DAILY.Threshold=WARN
log4j.appender.DAILY.File=logs/logging.log4j 
log4j.appender.DAILY.Append=true
#每天滚动一次日志文件，即每天产生一个新的日志文件。当天的日志文件名为logging.log4j，前一个天的日志文件名为logging.log4j.yyyy-MM-dd。
log4j.appender.DAILY.DatePattern='_'yyyy-MM-dd'.txt'
#日志输出样式（PatternLayout为自由指定样式）
log4j.appender.DAILY.layout=org.apache.log4j.PatternLayout
#设定以怎样的格式显示消息
log4j.appender.RollingFile.layout.ConversionPattern=[%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} --> [%t] %l: %m %x %n
